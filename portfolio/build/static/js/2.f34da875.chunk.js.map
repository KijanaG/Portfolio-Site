{"version":3,"sources":["components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.css","components/Weather/WeatherComponent/WeatherComponent.css","assets/img sync /^/.//.*/.png$","containers/World/Weather/WeatherApp.css","components/UI/Modal/Modal.css","components/UI/Backdrop/Backdrop.css","containers/World/WorldMap/WorldMap.css","components/UI/TwitterBird/TwitterBird.css","components/Weather/WeatherComponent/WeatherComponent.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","containers/World/Weather/WeatherApp.js","components/UI/TwitterBird/TwitterBird.js","containers/World/WorldMap/WorldMap.js","containers/World/World.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Spinner_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_css__WEBPACK_IMPORTED_MODULE_1___default","spinner","a","createElement","className","classes","Loader","module","exports","load1","WeatherCard","DayTimeOverCast","DayTime","NightOverCast","NightTime","IMG","LongName","FlipWeatherCard","StaticWeatherCard","WeatherCardFront","WeatherCardBack","drop","cloud","animateCloud","cloud1","animateCloud1","map","./01d.png","./01n.png","./02d.png","./02n.png","./03d.png","./04d.png","./09d.png","./10d.png","./10n.png","./11d.png","./13d.png","./50d.png","./US.png","./code.png","./globe.png","./home.png","./order.png","./ready.png","./search.png","./twitter.png","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","WeatherCards","Both","US","Globe","USA","ModalPrompt","Deny","FAB","pulse","Search","Modal","Backdrop","Nav","Trends","TweetTrends","Trend","Tweets","Embed","PopUp","Twitter","Tweet","pulsate","Icon","active","size","weatherComponent","props","daytime","isMetric","metric","time","now","Date","hours","getUTCHours","current","minutes","getUTCMinutes","Math","floor","toString","length","data","name","ampm","getTime","ts","round","sys","sunrise","sunset","temperature","main","temp","wind","speed","toFixed","weather","num","place","i","weatherIcon","clouds","numID","weatherPhoto","des","container","includes","react_default","key","style","right","animationDelay","height","cloudAnimation","cloudContainer","push","join","src","require","alt","textDecoration","backdrop","show","onClick","clicked","nextProps","nextState","this","children","Fragment","Backdrop_Backdrop","modalClosed","transform","opacity","Component","withErrorHandler","WrappedComponent","axios","_Component","_class2","_getPrototypeOf2","_this","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","error","errorConfirmedHandler","setState","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","resInterceptor","response","res","eject","UI_Modal_Modal","message","locationOut","cityOut","weatherOut","checkInterval","WeatherApp","weatherData","locationData","anyLocationData","checked","timer","getCurrent","showButton","input","loading","anyLocationLoading","changeSwitchHandler","bool","getLocationHandler","onLocationHandler","setTimeout","changeModal","boolButton","getInput","searchInputCity","onAnyLocationHandler","updateStateHandler","target","getBool","setInterval","clearTimeout","clearInterval","_this3","worldData","city","WeatherComponent_WeatherComponent","Spinner","component","locationError","GMTPlus","currentGMT","currentTime","currentLocation","otherComponent","anyError","anyGMT","anyTime","anyLocation","modal","btnStyle","inputStyle","backgroundImage","fontFamily","letterSpacing","fontWeight","Switch_default","color","icon","checkedIcon","marginTop","type","placeholder","onKeyPress","onChange","all","width","borderRadius","position","top","background","display","cursor","textAlign","connect","dispatch","actions","twitterBird","zoomOut","WorldMap","viewport","latitude","longitude","zoom","bearing","pitch","trends","twitterData","lat","long","tweetData","cannotFind","getTweets","title","url","method","baseURL","APIKeys","prod","then","catch","err","console","log","listTweetTrend","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","obj","return","markers","coord","lon","esm","TwitterBird_TwitterBird","currentMarker","currLocation","anyMarker","showPopUp","showTwitterFeed","tweets","index_es","tweetId","padding","fontSize","tweet","window","open","assign","mapStyle","mapboxApiAccessToken","MapGL","onViewportChange","World","cities","changePhoto","onInitializeData","World_Weather_WeatherApp","World_WorldMap_WorldMap","photo"],"mappings":"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","file":"static/js/2.f34da875.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load1\":\"Spinner__load1__3Y-9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherCard\":\"WeatherComponent__WeatherCard__22IWH\",\"DayTimeOverCast\":\"WeatherComponent__DayTimeOverCast__1RfZL\",\"DayTime\":\"WeatherComponent__DayTime__3nKAx\",\"NightOverCast\":\"WeatherComponent__NightOverCast__efsTR\",\"NightTime\":\"WeatherComponent__NightTime__3Na_m\",\"IMG\":\"WeatherComponent__IMG__1vowk\",\"LongName\":\"WeatherComponent__LongName__3bh7-\",\"FlipWeatherCard\":\"WeatherComponent__FlipWeatherCard__3_lVw\",\"StaticWeatherCard\":\"WeatherComponent__StaticWeatherCard__2zwLQ\",\"WeatherCardFront\":\"WeatherComponent__WeatherCardFront__OWRgk\",\"WeatherCardBack\":\"WeatherComponent__WeatherCardBack__USFBG\",\"drop\":\"WeatherComponent__drop__2jkyq\",\"cloud\":\"WeatherComponent__cloud__6aCIS\",\"animateCloud\":\"WeatherComponent__animateCloud__2VKun\",\"cloud1\":\"WeatherComponent__cloud1__2rKml\",\"animateCloud1\":\"WeatherComponent__animateCloud1__3urRM\"};","var map = {\n\t\"./01d.png\": 121,\n\t\"./01n.png\": 122,\n\t\"./02d.png\": 123,\n\t\"./02n.png\": 124,\n\t\"./03d.png\": 125,\n\t\"./04d.png\": 126,\n\t\"./09d.png\": 127,\n\t\"./10d.png\": 128,\n\t\"./10n.png\": 129,\n\t\"./11d.png\": 130,\n\t\"./13d.png\": 131,\n\t\"./50d.png\": 132,\n\t\"./US.png\": 117,\n\t\"./code.png\": 133,\n\t\"./globe.png\": 118,\n\t\"./home.png\": 134,\n\t\"./order.png\": 135,\n\t\"./ready.png\": 136,\n\t\"./search.png\": 119,\n\t\"./twitter.png\": 116\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 357;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherCards\":\"WeatherApp__WeatherCards__1Cnfr\",\"Both\":\"WeatherApp__Both__26W39\",\"US\":\"WeatherApp__US__2LF9S\",\"Globe\":\"WeatherApp__Globe__3wlQd\",\"USA\":\"WeatherApp__USA__1oVeZ\",\"ModalPrompt\":\"WeatherApp__ModalPrompt__1YrJ-\",\"Deny\":\"WeatherApp__Deny__1iprJ\",\"FAB\":\"WeatherApp__FAB__10f63\",\"pulse\":\"WeatherApp__pulse__2aCUQ\",\"Search\":\"WeatherApp__Search__30HKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"WorldMap__Nav__3kmZb\",\"Trends\":\"WorldMap__Trends__15h3f\",\"TweetTrends\":\"WorldMap__TweetTrends__2raDf\",\"Trend\":\"WorldMap__Trend__DoCXL\",\"Tweets\":\"WorldMap__Tweets__2WoFL\",\"Embed\":\"WorldMap__Embed__2071e\",\"PopUp\":\"WorldMap__PopUp__3rQvi\",\"Twitter\":\"WorldMap__Twitter__2Frcx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tweet\":\"TwitterBird__Tweet__OApJU\",\"pulsate\":\"TwitterBird__pulsate__c6ko-\",\"Icon\":\"TwitterBird__Icon__3NhXP\",\"pulse\":\"TwitterBird__pulse__30YAW\",\"active\":\"TwitterBird__active__2P9Ph\",\"size\":\"TwitterBird__size__WAv0W\"};","import React from 'react';\nimport classes from './WeatherComponent.css';\nimport weatherPhoto from '../../../assets/weatherObject/weatherID.json';\n\nconst weatherComponent = (props) => {\n    const isMetric = props.metric;\n    /* Extracting data for windspeed, weather description, \n        matching weather icon, city name & temperature provided\n        by openweathermap.org weather API JSON data */\n    //Get Current Time in City\n    const getTime = () => {\n        var now = new Date();\n        var hours = now.getUTCHours();\n        if (props.current) {\n            if (props.current < 0) {\n                hours += 24;\n                hours += props.current;\n            } else {\n                hours += props.current;\n            }\n            hours = hours % 24;\n        }\n        var minutes = now.getUTCMinutes();\n        if ((hours - Math.floor(hours)) > 0) {\n            minutes += (hours - Math.floor(hours)) * 60;\n            if(minutes > 60) {\n                hours = Math.floor(hours) + 1;\n                minutes = minutes % 60;\n            }\n        }\n        if (hours === 24) hours = 0;\n        if ((minutes.toString()).length === 1) minutes = \"0\" + minutes;\n        if(props.data.name === \"London\")\n            hours = (hours + 1) % 24;\n        else if (props.data.name === \"Barcelona\")\n            hours = (hours + 2) % 24;\n        else if (props.data.name === \"Sydney\")\n            hours = (hours + 10) % 24;\n        else if (props.data.name === \"Tokyo\")\n            hours = (hours + 9) % 24;\n        else if (props.data.name === \"Seattle\")\n            hours = (hours + 17) % 24;\n        var time;\n        let ampm = \"AM\";\n        const nonMilitary = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n        if (!isMetric) {\n            if (hours > 11 && hours < 24) {\n                hours = nonMilitary[hours];\n                ampm = \"PM\";\n            }\n            if (hours === 0) hours = 12;\n            time = hours + \":\" + minutes + \" \" + ampm;\n        } else {\n            time = hours + \":\" + minutes;\n        }\n        return time;\n    }\n    var time = getTime();\n    //Get Time of Day for Sunset/Sunrise UI info\n    let daytime;\n\n    const ts = Math.round((new Date()).getTime() / 1000);\n    if ((ts > props.data.sys.sunrise && ts < props.data.sys.sunset)\n        || (ts > props.data.sys.sunrise + 86400 && ts < props.data.sys.sunset + 86400)\n        || (ts < props.data.sys.sunset - 86400 && ts > props.data.sys.sunrise - 86400))\n        daytime = true;\n    else\n        daytime = false;\n\n    //Get Current Temperature of City\n    let temperature = Math.round(props.data.main.temp - 273.15);\n    if (!isMetric) temperature = Math.round((temperature * (9 / 5)) + 32);\n\n    //Get Wind Speed Data \n    let wind = props.data.wind.speed.toFixed(1);\n    if (!isMetric) wind = (props.data.wind.speed * 2.23694).toFixed(1);\n    //Get Current Weather Status for UI\n    let weather = props.data.weather;\n    let num = weather[0]['id'];\n    var place = 0;\n    for (var i = 0; i < weather.length; i++) {\n        if (weather[i]['id'] < num) {\n            place = i;\n            num = weather[i]['id'];\n        }\n    }\n    let weatherIcon = \"\";\n    let clouds = false;\n    let numID = num.toString();\n    if (numID[0] === \"2\" ||\n        numID[0] === \"3\" ||\n        numID[0] === \"6\" ||\n        numID[0] === \"7\") {\n        weatherIcon = weatherPhoto[numID[0]];\n        clouds = true;\n    }\n    else if (numID[0] === \"5\") {\n        weatherIcon = weatherPhoto[\"5\"][numID[1]];\n        clouds = true;\n    } else {\n        if (numID[1] === \"2\" ||\n            numID[1] === \"3\" ||\n            numID[1] === \"4\") {\n            weatherIcon = weatherPhoto[\"8\"][numID[1]];\n            clouds = true;\n        }\n        else if (numID[1] === \"0\") {\n            if (daytime) weatherIcon = weatherPhoto[\"8\"][\"0\"][\"d\"];\n            else weatherIcon = weatherPhoto[\"8\"][\"0\"][\"n\"];\n        } else {\n            if (daytime) weatherIcon = weatherPhoto[\"8\"][\"1\"][\"d\"];\n            else weatherIcon = weatherPhoto[\"8\"][\"1\"][\"n\"];\n        }\n    }\n    //Display Weather Description\n    let des = \"\";\n    let container = \"\";\n    if (weather.length === 1) {\n        des = weather[0]['description'];\n    }\n    else if (weather.length === 2) {\n        des = weather[0]['description'] + \" & \" + weather[1]['description'];\n    }\n    else {\n        des = weather[place]['description'];\n    }\n    if (des.includes('rain')) {\n        let list = [8, 23, 36, 47, 59, 77, 90, 107, 122, 144];\n        container = list.map(num => {\n            return <div key={num} className={classes.drop} style={{ right: num + \"px\", animationDelay: num % 0.4 + \"s\", height: num % 9 + 23 + \"px\" }}></div>\n        })\n    }\n    //Add styles to Weather Cards\n    var style = [classes.WeatherCard];\n    let cloudAnimation = [classes.cloud, classes.cloud1];\n    let cloudContainer = null;\n    if (daytime) {\n        if (clouds) {\n            style.push(classes.DayTimeOverCast);\n            cloudContainer = cloudAnimation.map(cloud => {\n                return <div key={cloud} className={cloud}></div>\n            })\n        }\n        else\n            style.push(classes.DayTime);\n    } else {\n        if (clouds) {\n            style.push(classes.NightOverCast);\n            cloudContainer = cloudAnimation.map(cloud => {\n                return <div key={cloud} className={cloud}></div>\n            })\n        }\n        else\n            style.push(classes.NightTime);\n    }\n\n    return (\n        <div className={style.join(' ')}>\n            <div className={classes.FlipWeatherCard} >\n                <div className={classes.WeatherCardFront} >\n                    {container}\n                    {cloudContainer}\n                    {props.data.name.length < 11 ? <h1>{props.data.name}</h1> : <h1 className={classes.LongName}>{props.data.name}</h1>}\n                    <img className={classes.IMG} src={require('../../../assets/img/' + weatherIcon + '.png')} alt='thunder' />\n                    {des.length <= 16 ? <h3>{des}</h3> : (des.length >= 40 ? <h6>{des}</h6> : <h5>{des}</h5>)}\n                    <h2>{temperature}<span style={{ textDecoration: \"none\" }}>˚</span></h2>\n                    <h4>{wind}{isMetric ? \" m/s\" : \" mph\"}</h4>\n                </div>\n                <div className={classes.WeatherCardBack}>\n                    <h1>{time}</h1>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default weatherComponent;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport classes from './Modal.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n    \n    render () {\n        return (\n            <>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport WeatherComponent from '../../../components/Weather/WeatherComponent/WeatherComponent';\nimport axios from 'axios';\nimport classes from './WeatherApp.css';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Switch from '@material-ui/core/Switch';\nimport Modal from '../../../components/UI/Modal/Modal';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nvar locationOut = null;\nvar cityOut = null;\nvar weatherOut = null;\nvar checkInterval = null;\n\nclass WeatherApp extends Component {\n    state = {\n        weatherData: false,\n        locationData: false,\n        anyLocationData: false,\n        checked: true,\n        timer: false,\n        getCurrent: false,\n        showButton: true,\n        input: \"\",\n        loading: false,\n        anyLocationLoading: false\n    }\n\n    componentDidMount() {\n        weatherOut = setTimeout(() => {\n            this.setState({ weatherData: true })\n        }, 2200)\n        checkInterval = setInterval(() => {\n            var checked = this.state.timer;\n            this.setState({ timer: !checked })\n        }, 45000)\n    }\n\n    componentWillUnmount() {\n        clearTimeout(locationOut);\n        clearTimeout(cityOut);\n        clearTimeout(weatherOut);\n        clearInterval(checkInterval);\n    }\n\n    changeSwitchHandler = () => {\n        let bool = this.state.checked;\n        this.setState({ checked: !bool });\n    }\n\n    getLocationHandler = () => {\n        this.props.onLocationHandler();\n        this.setState({ loading: true });\n        locationOut = setTimeout(() => {\n            this.changeModal();\n            let boolButton = this.state.showButton;\n            this.setState({ locationData: true, loading: false, showButton: !boolButton })\n        }, 2000);\n    }\n\n    getInput = (e) => {\n        if (e.key === \"Enter\")\n            this.searchInputCity();\n    }\n    searchInputCity = () => {\n        this.props.onAnyLocationHandler(this.state.input);\n        this.setState({ anyLocationLoading: true });\n        cityOut = setTimeout(() => {\n            this.setState({ anyLocationData: true, anyLocationLoading: false });\n        }, 1900)\n    }\n\n    updateStateHandler = (e) => {\n        this.setState({ input: e.target.value });\n    }\n\n    changeModal = () => {\n        var getBool = this.state.getCurrent;\n        this.setState({ getCurrent: !getBool });\n    }\n\n\n    render() {\n        let weather;\n        if (!this.state.weatherData)\n            weather = <Spinner />;\n        else {\n            weather = this.props.worldData.map(city => {\n                return <WeatherComponent\n                    metric={this.state.checked}\n                    key={Object.keys(city)[0]}\n                    data={city[Object.keys(city)[0]]} />;\n            })\n        }\n        let component = null;\n        if (this.state.locationData && !this.props.locationError) {\n            component = (\n                <WeatherComponent\n                    GMTPlus={this.props.currentGMT}\n                    current={this.props.currentTime}\n                    metric={this.state.checked}\n                    key={Object.keys(this.props.currentLocation)[0]}\n                    data={this.props.currentLocation[Object.keys(this.props.currentLocation)[0]]} />\n            );\n        }\n        let otherComponent = null;\n        if (this.state.anyLocationLoading)\n            otherComponent = <Spinner />;\n        else {\n            if (this.state.anyLocationData && !this.props.anyError) {\n                otherComponent = (\n                    <WeatherComponent\n                        GMTPlus={this.props.anyGMT}\n                        current={this.props.anyTime}\n                        metric={this.state.checked}\n                        key={Object.keys(this.props.anyLocation)[0]}\n                        data={this.props.anyLocation[Object.keys(this.props.anyLocation)[0]]} />\n                );\n            }\n        }\n\n        let modal = (\n            <Modal show={this.state.getCurrent} modalClosed={() => this.changeModal()}>\n                <h1>Get Weather Data for <span>your</span> current location</h1>\n                <button className={classes.ModalPrompt}\n                    onClick={() => this.getLocationHandler()}> Yes </button>\n                <button className={[classes.ModalPrompt, classes.Deny].join(' ')}\n                    onClick={() => this.changeModal()}> No </button>\n            </Modal>\n        );\n        if (this.state.loading)\n            modal = (\n                <Modal show={this.state.getCurrent} modalClosed={() => this.changeModal()}>\n                    <Spinner />\n                </Modal>\n            );\n\n        var btnStyle = \"\";\n        if (!this.state.checked) btnStyle = classes.USA;\n        let inputStyle = { backgroundImage: 'url(' + require('../../../assets/img/search.png') + ')' }\n        let goStyle = {\n            all: \"none\", width: \"60px\", height: \"30px\", borderRadius: \"10px\", position: \"relative\",\n            top: \"0px\", background: \"#317FE5\", textDecoration: \"none\", display: \"inline-block\",\n            color: \"white\", cursor: \"pointer\", textAlign: \"center\", fontWeight: \"bold\"\n        }\n\n        return (\n            <div className={classes.WeatherCards}>\n                {modal}\n                <h1 style={{ fontFamily: \"Georgia\", letterSpacing: \"0.2em\", fontWeight: \"bold\" }}> OpenWeatherMap API </h1>\n                <Switch\n                    checked={this.state.checked}\n                    color=\"default\"\n                    icon={\n                        <img className={classes.Both} onClick={() => this.changeSwitchHandler()}\n                            src={require('../../../assets/img/US.png')} alt=\"US\" />}\n                    checkedIcon={\n                        <img className={classes.Both} onClick={() => this.changeSwitchHandler()}\n                            src={require('../../../assets/img/globe.png')} alt=\"International\" />}\n                />\n                {this.state.showButton ?\n                    <button\n                        className={[classes.FAB, btnStyle].join(' ')}\n                        onClick={() => this.changeModal()}></button> : null}\n                <hr />\n                {weather}\n                {component}\n                {otherComponent}\n                <hr />\n                <h1\n                    style={{\n                        fontFamily: \"Georgia\",\n                        letterSpacing: \"0.2em\",\n                        fontWeight: \"bold\",\n                        marginTop: \"15px\"\n                    }}\n                >| Check Another City |</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"Rancho Santa Margarita, California\"\n                    style={inputStyle}\n                    onKeyPress={this.getInput}\n                    value={this.state.input}\n                    onChange={(e) => this.updateStateHandler(e)} />\n                <button onClick={this.searchInputCity} style={goStyle}>Search</button>\n                <hr />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        worldData: state.worldData.weatherData,\n        currentLocation: state.worldData.currentLocation,\n        currentTime: state.worldData.currentTime,\n        currentGMT: state.worldData.currentGMT,\n        locationError: state.worldData.locationError,\n        anyLocation: state.worldData.anyLocation,\n        anyTime: state.worldData.anyTime,\n        anyGMT: state.worldData.anyGMT,\n        anyError: state.worldData.anyError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLocationHandler: () => dispatch(actions.getLocationData()),\n        onAnyLocationHandler: (city) => dispatch(actions.getAnyLocationData(city))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(WeatherApp, axios));","import React from 'react';\nimport classes from './TwitterBird.css';\n\nconst twitterBird = (props) => {\n\n    return (\n        <>\n            <div className={classes.Icon}>\n                <img className={classes.Tweet} src={require('../../../assets/img/twitter.png')} alt={\"twitter\"} />\n            </div>\n        </>\n    )\n}\n\nexport default twitterBird;","import React, { Component } from 'react';\nimport classes from './WorldMap.css';\nimport MapGL, { Marker } from \"react-map-gl\";\nimport { connect } from 'react-redux';\nimport Bird from '../../../components/UI/TwitterBird/TwitterBird';\nimport axios from 'axios';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport APIKeys from '../../../assets/APIKeys/WeatherAPI.json';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\n\nvar zoomOut = null;\n\nclass WorldMap extends Component {\n\n    state = {\n        viewport: {\n            latitude: 37.7577,\n            longitude: -50.4376,\n            zoom: 1.8,\n            bearing: 0,\n            width: \"100\",\n            height: 500,\n            pitch: 15\n        },\n        trends: \"\",\n        twitterData: [],\n        lat: \"\",\n        long: \"\",\n        tweetData: [],\n        cannotFind: false,\n        loading: false\n    }\n\n    componentDidMount() {\n        zoomOut = setTimeout(() => {\n            let viewport = this.state.viewport;\n            viewport.zoom = 1.6;\n            this.setState({ viewport: viewport });\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearTimeout(zoomOut);\n    }\n\n    getTweets = (lat, long, name) => {\n        let title = \"Current Trends in \" + name;\n        this.setState({ trends: title, lat: lat, long: long });\n        axios({\n            url: '/api/getTrends',\n            method: 'POST',\n            baseURL: APIKeys.prod,\n            data: {\n                lat: lat,\n                long: long\n            }\n        })\n            .then(res => {\n                this.setState({ twitterData: res.data, tweetData: [] });\n            })\n            .catch(err => {\n                console.log(\"Error: \", err);\n            })\n    }\n\n    listTweetTrend = (name) => {\n        this.setState({ loading: true, tweetData: [] });\n        axios({\n            url: '/api/getTweets',\n            method: 'POST',\n            baseURL: APIKeys.prod,\n            data: {\n                name: name,\n                lat: this.state.lat,\n                long: this.state.long\n            }\n        })\n            .then(res => {\n                let tweetData = [];\n                for (var obj of res.data)\n                    tweetData.push(obj['id_str']);\n                if (tweetData.length === 0)\n                    this.setState({ tweetData: [], cannotFind: true, loading: false })\n                else\n                    this.setState({ tweetData: tweetData, cannotFind: false, loading: false });\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        let markers = null;\n        if (this.props.weatherData.length > 0) {\n            markers = this.props.weatherData.map(city => {\n                return (\n                    <div key={Object.keys(city)[0]}\n                        className={classes.Nav}\n                        onClick={() => {\n                            this.getTweets(\n                                city[Object.keys(city)[0]].coord.lat,\n                                city[Object.keys(city)[0]].coord.lon,\n                                Object.keys(city)[0])\n                        }}>\n                        <Marker\n                            longitude={city[Object.keys(city)[0]].coord.lon}\n                            latitude={city[Object.keys(city)[0]].coord.lat}>\n                            <Bird />\n                        </Marker>\n                    </div>\n                );\n            })\n        }\n        let currentMarker = null;\n        if (this.props.currentLocation) {\n            let currLocation = this.props.currentLocation;\n            currentMarker = (\n                <div key={Object.keys(currLocation)[0]}\n                    className={classes.Nav}\n                    onClick={() => {\n                        this.getTweets(\n                            currLocation[Object.keys(currLocation)[0]].coord.lat,\n                            currLocation[Object.keys(currLocation)[0]].coord.lon,\n                            Object.keys(currLocation)[0])\n                    }}>\n                    <Marker\n                        longitude={currLocation[Object.keys(currLocation)[0]].coord.lon}\n                        latitude={currLocation[Object.keys(currLocation)[0]].coord.lat}>\n                        <Bird />\n                    </Marker>\n                </div>\n            )\n        }\n        let anyMarker = null;\n        if (this.props.anyLocation) {\n            let anyLocation = this.props.anyLocation;\n            anyMarker = (\n                <div key={Object.keys(anyLocation)[0]}\n                    className={classes.Nav}\n                    onClick={() => {\n                        this.getTweets(\n                            anyLocation[Object.keys(anyLocation)[0]].coord.lat,\n                            anyLocation[Object.keys(anyLocation)[0]].coord.lon,\n                            Object.keys(anyLocation)[0])\n                    }}>\n                    <Marker\n                        longitude={anyLocation[Object.keys(anyLocation)[0]].coord.lon}\n                        latitude={anyLocation[Object.keys(anyLocation)[0]].coord.lat}>\n                        <Bird />\n                    </Marker>\n                </div>\n            )\n        }\n        let showPopUp = null;\n        if (this.state.twitterData.length > 0) {\n            showPopUp = { display: \"block\" }\n        }\n        let showTwitterFeed = null;\n        if (this.state.tweetData.length > 0) {\n            showTwitterFeed = { display: \"block\", height: \"600px\" }\n        } else if (this.state.cannotFind || this.state.loading) {\n            showTwitterFeed = { display: \"block\", height: \"200px\" }\n        }\n        let tweets = null;\n        if (this.state.loading) {\n            tweets = <Spinner />;\n        } else if (this.state.tweetData.length > 0) {\n            tweets = this.state.tweetData.map(id => {\n                return <TwitterTweetEmbed className={classes.Embed} key={id} tweetId={id} />\n            })\n        } else if (this.state.cannotFind) {\n            tweets = <h1>Sorry! Cannot find tweets for this trend.</h1>\n        }\n        return (\n            <div style={{ padding: \"20px auto 40px auto\" }}>\n            <div style={{textAlign: \"center\"}}>\n            <h1 style={{ fontFamily: \"Georgia\", letterSpacing: \"0.2em\", fontWeight: \"bold\", fontSize:24, marginTop:10 }}> Twitter Trends & Feeds By Location </h1>\n            </div>\n                <div className={classes.PopUp} style={showPopUp}>\n                    <h2 className={classes.Trends}>{this.state.trends}</h2>\n                    <hr />\n                    <div className={classes.TweetTrends}>\n                        {this.state.twitterData.length > 0 ? this.state.twitterData.map(tweet => {\n                            return (\n                                <div key={tweet.url} onClick={() => this.listTweetTrend(tweet.name)}>\n                                    <h5 className={classes.Trend}>{tweet.name}</h5>&nbsp;&nbsp;\n                                    <img\n                                        onClick={() => window.open(tweet.url, \"_blank\")}\n                                        src={require('../../../assets/img/twitter.png')}\n                                        alt=\"twitter\"\n                                        style={{ width: \"20px\", height: \"20px\", display: \"inline-block\" }}\n                                    />\n                                    <hr />\n                                </div>\n                            );\n                        }, this) : null}\n                    </div>\n                </div>\n                <div className={classes.Tweets} style={showTwitterFeed}>{tweets}</div>\n                <MapGL\n                    {...this.state.viewport}\n                    mapStyle=\"mapbox://styles/kjgarrett/cjqt7xa890dlq2qpiyd9iflkb\"\n                    mapboxApiAccessToken={APIKeys.MapGL}\n                    onViewportChange={(viewport) => this.setState({ viewport })}>\n                    <div>\n                        {markers}\n                        {currentMarker}\n                        {anyMarker}\n                    </div>\n                </MapGL>\n                <br />\n                <br />\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        weatherData: state.worldData.weatherData,\n        currentLocation: state.worldData.currentLocation,\n        anyLocation: state.worldData.anyLocation\n    }\n}\n\nexport default connect(mapStateToProps)(withErrorHandler(WorldMap, axios));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport WeatherApp from './Weather/WeatherApp';\nimport WorldMap from './WorldMap/WorldMap';\nimport * as actions from '../../store/actions/index';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from 'axios';\n\n\nclass World extends Component {\n    state = {\n        cities: [\n            'Seattle',\n            'Barcelona',\n            'London',\n            'Tokyo',\n            'Sydney'\n        ]\n    }\n\n    componentWillMount() {\n        this.props.changePhoto(\"montana.jpg\")\n        if(this.props.weatherData.length === 0) {\n            for (var city of this.state.cities)\n                this.props.onInitializeData(city);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <WeatherApp />\n                <WorldMap />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        weatherData: state.worldData.weatherData,\n        backgroundImage: state.worldData.backgroundImage\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitializeData: (city) => dispatch(actions.fetchWeatherData(city)),\n        changePhoto: (photo) => dispatch(actions.changePhoto(photo))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(World, axios));"],"sourceRoot":""}